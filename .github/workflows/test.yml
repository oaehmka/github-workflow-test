name: Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ windows-latest ]
    steps:
      - name: dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart
        run: dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart
        if: runner.os == 'Windows' && ${{ always() }}
      - name: dism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart
        run: dism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart
        if: runner.os == 'Windows' && ${{ always() }}
      - name: wsl --set-default-version 2
        run: wsl --set-default-version 2
        if: runner.os == 'Windows' && ${{ always() }}
      - name: Invoke-WebRequest -Uri https://aka.ms/wslubuntu2004 -OutFile Ubuntu.appx -UseBasicParsing
        run: Invoke-WebRequest -Uri https://aka.ms/wslubuntu2004 -OutFile Ubuntu.appx -UseBasicParsing
        if: runner.os == 'Windows' && ${{ always() }}
      - name: wsl --install -d Ubuntu
        run: wsl --install -d Ubuntu
        if: runner.os == 'Windows' && ${{ always() }}
      - name: wsl -l -v
        run: wsl -l -v
        if: runner.os == 'Windows' && ${{ always() }}
      - name: Install docker via choco
        run: choco install docker-desktop
        if: runner.os == 'Windows' && ${{ always() }}
      - name: Test docker on windows-latest
        run: docker run --rm hello-world
        if: runner.os == 'Windows' && ${{ always() }}
      - name: Test linux docker container on windows-latest
        run: docker run --rm ubuntu:latest echo test
        if: runner.os == 'Windows' && ${{ always() }}
